# -*- coding: utf-8 -*-
"""ImersaoAula4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19u8uMSp15DCNtK17l4CSiHa4Q-tnqlJ7
"""

# Importa bibliotecas
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Acessa os dados subidos (Dados_imersao e Avaliacoes)
dados = pd.read_csv('/content/Dados_imersao - Dados.csv')
avaliacoes = pd.read_csv('/content/Avaliacoes - Avaliacoes.csv')

# Exibe os dados de forma simplificada
print(dados.head())

# Exibe os dados mais elaboradamente
dados.head()

# Exibe as duas primeiras linhas da tabela "dados"
dados.head(2)

# Exibe as regras de formatação de cada coluna
dados.info()

dados.describe()

# Supondo que o símbolo da rupia seja '₹', busca o símbolo como string e substitui por nada
dados['actual_price'] = dados['actual_price'].str.replace('₹', '')

# Substitui ponto por nada
dados['actual_price'] = dados['actual_price'].str.replace('.', '')

# Subistitui vírgula por ponto
dados['actual_price'] = dados['actual_price'].str.replace(',', '.')

# Convertendo a coluna para o tipo numérico (opcional)
dados['actual_price'] = pd.to_numeric(dados['actual_price'])

# Exibindo os primeiros registros após a remoção do símbolo da moeda
dados.head()

# Substitui caracteres
dados['product_price'] = dados['product_price'].str.replace('₹','').str.replace('.', '').str.replace(',', '.')

dados.head()

# Função para transformar os números em string
#dados['product_price'] = dados['product_price'].astype(str)

# Função lambda para inserir um ponto antes dos dois últimos dígitos do número
#dados['product_price'] = dados['product_price'].apply(lambda x: x[:-2] + '.' + x[-2:])

dados.head()

# Converte coluna para tipo numérico
dados['product_price'] = pd.to_numeric(dados['product_price'])

dados['rating'] = dados['rating'].str.replace(',', '.')

# Converte coluna para tipo numérico
dados['rating'] = pd.to_numeric(dados['rating'])

dados.info()

dados.describe()

dados.head()

# Remove o símbolo "R$"
dados['actual_price_real'] = dados['actual_price_real'].str.replace('R\$', '')

dados['actual_price_real'] = dados['actual_price_real'].str.replace('.', '').str.replace(',', '.')

# Converte coluna para tipo numérico
dados['actual_price_real'] = pd.to_numeric(dados['actual_price_real'])

dados.info()

"""## Graficos"""

# Filtra os valores acima de 4.5
ratings_above_4_5 = dados[dados['rating'] >= 4.5]

# Conta a frequência de cada valor
rating_counts = ratings_above_4_5['rating'].value_counts().sort_index()

# Cria o gráfico de barras
plt.figure(figsize=(10, 6))
sns.barplot(x=rating_counts.index, y=rating_counts.values)#, color='skyblue')
# plt.bar(rating_counts.index, rating_counts.values, color='skyblue')
plt.xlabel('Avaliação')
plt.ylabel('Contagem')
plt.title('Contagem de Avaliações Acima de 4.5')
plt.show()

# Filtre os valores até 50 reais
ate_50 = dados[dados['actual_price_real'] <= 50]

# Filtre os valores entre 50 reais e 500 reais
entre_50_500 = dados[(dados['actual_price_real'] > 50) & (dados['actual_price_real'] <= 500)]

# Filtre os valores acima de 500 reais
acima_de_500 = dados[dados['actual_price_real'] > 500]

# Contagem de produtos em cada faixa de valor
contagem = [len(ate_50), len(entre_50_500), len(acima_de_500)]
categorias = ['Até 50 Reais', 'Entre 50 e 500 Reais', 'Acima de 500 Reais']

# Destacar a fatia com o maior valor
explode = (0.1, 0, 0)

# Crie um gráfico de pizza
plt.figure(figsize=(8, 8))
plt.pie(contagem, labels=categorias, autopct='%1.2f%%', startangle=140, explode=explode)
plt.title('Distribuição de Produtos por Faixa de Valor')
plt.show()